name: Deploy Application to AKS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  Deploy-Application:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS Credentials
        run: az aks get-credentials --resource-group rg-rare-elf --name cluster-golden-cardinal

      - name: Deploy to AKS
        run: |
          kubectl apply -f ./kubernetes/
          sleep 40
          kubectl get service -o wide

      - name: Test Application Availability
        run: |
          sleep 60  
          # backend_ip=$(kubectl get service teachua-backend-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          frontend_ip=$(kubectl get service teachua-frontend-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          # echo "Backend Service IP: $backend_ip"
          echo "Frontend Service IP: $frontend_ip"
          # curl -sSf http://$backend_ip
          curl -sSf http://$frontend_ip
 
      - name: AKS Monitoring Enabler
        run: |
          az aks get-credentials -n "cluster-golden-cardinal" -g "rg-rare-elf"
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update
          helm install prometheus prometheus-community/kube-prometheus-stack --namespace monitoring --create-namespace
          rm -rf ~/.kube

   integration_tests:
     runs-on: ubuntu-latest
     needs: [Deploy-Application]
     steps:
       - name: Checkout code
         uses: actions/checkout@v3.1.0

       - name: Run integration tests
         run: ./integration-test.sh       
