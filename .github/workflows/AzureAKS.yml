name: Create AKS Cluster with Terraform
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  create-aks-cluster:
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: terraform
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: latest
          cli_config_credentials_token: ${{ secrets.TFC_TOKEN_ID }}

       - name: Create terraform.tfvars
         run: |
           echo "subscription_id = \"${{ secrets.SUBSCRIPTION_ID }}\"" > terraform.tfvars
           echo "client_id       = \"${{ secrets.CLIENT_ID }}\"" >> terraform.tfvars
           echo "client_secret   = \"${{ secrets.CLIENT_SECRET }}\"" >> terraform.tfvars
           echo "tenant_id       = \"${{ secrets.TENANT_ID }}\"" >> terraform.tfvars  
           echo "ssh_public_key  = \"${{ secrets.SSH_PUBLIC_KEY }}\"" >> terraform.tfvars

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Terraform Output
        run: terraform output
